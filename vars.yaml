# vars.yml
# Externalized variables for Ansible setup

# System configuration
install_rosetta: false  # Set to true to install Rosetta 2 (required for some Intel-based applications on Apple Silicon)

# Homebrew configuration
homebrew_taps:
  - aws/tap
  - azure/bicep
  - azure/functions
  - hashicorp/tap
  - microsoft/git
  - teamookla/speedtest
  # Add more taps as needed

homebrew_casks:
  - 1password
  - appcleaner
  - azure-data-studio
  - chatgpt
  - docker
  - dotnet-sdk
  - elgato-camera-hub
  - firefox
  - font-caskaydia-cove-nerd-font
  - git-credential-manager
  - google-chrome
  - iterm2
  - microsoft-azure-storage-explorer
  - microsoft-edge
  - microsoft-office
  - microsoft-remote-desktop
  - microsoft-teams
  - netspot
  - ngrok
  # Doesn't work without Rosetta 2
  # - parallels
  - powershell
  - rectangle-pro
  - spotify
  - steam
  - synologyassistant
  - tailscale
  - utm
  - virtualbox
  - visual-studio-code
  - wine-stable
  # Doesn't work without Rosetta 2
  # - yubico-yubikey-manager
  - zoom
  # Add more casks as needed

homebrew_formulae:
  - aws-sam-cli
  - awscli
  - azure-cli
  - azure-functions-core-tools@4
  - bash
  - bash-git-prompt
  - bicep
  - cfn-lint
  - chruby
  - chruby-fish
  - cmake
  - direnv
  - ffmpeg
  - fish
  - fzf
  - gh
  - git
  - git-lfs
  - go
  - hashicorp/tap/packer
  - hashicorp/tap/terraform
  - hashicorp/tap/vault
  - istioctl
  - jq
  - maven
  - node
  - oh-my-posh
  - pipx
  - pyenv-virtualenv
  - python
  - qemu
  - ruby-install
  - rustup
  - ruff
  - serverless
  - teamookla/speedtest/speedtest
  - uv
  - wget2
  - zsh-autocomplete
  - zsh-autosuggestions
  - zsh-syntax-highlighting
  # Add more formulae as needed

# PowerShell modules
powershell_modules:
  - Az.Accounts
  - oh-my-posh
  - Pester
  - platyPS
  - posh-git
  - powershell-yaml
  - PowerShellBuild
  - psake
  - PSGraphQL
  - PSJsonWebToken
  - PSReadLine
  - PSScriptAnalyzer
  - PSTcpIp
  - Terminal-Icons
  # Add more PowerShell modules as needed

# pipx modules
pipx_modules:
  - poetry
  - taskcat
  # Add more pipx modules as needed

# VS Code extensions
# You can list your VS Code extensions with the command:
# code --list-extensions
# and then format them as shown below.
vscode_extensions:
  - 4ops.packer
  - alefragnani.project-manager
  - arjun.swagger-viewer
  - aws-scripting-guy.cform
  - charliermarsh.ruff
  - codezombiech.gitignore
  - davidanson.vscode-markdownlint
  - dbaeumer.vscode-eslint
  - docker.docker
  - donjayamanne.git-extension-pack
  - donjayamanne.githistory
  - eamodio.gitlens
  - esbenp.prettier-vscode
  - fernandoescolar.vscode-solution-explorer
  - github.copilot
  - github.copilot-chat
  - github.vscode-github-actions
  - github.vscode-pull-request-github
  - golang.go
  - grapecity.gc-excelviewer
  - hbenl.vscode-test-explorer
  - josin.kusto-syntax-highlighting
  - k--kato.docomment
  - medo64.render-crlf
  - mhutchie.git-graph
  - mimarec.swagger-doc-viewer
  - mohsen1.prettify-json
  - ms-azuretools.vscode-azurefunctions
  - ms-azuretools.vscode-azureresourcegroups
  - ms-azuretools.vscode-bicep
  - ms-azuretools.vscode-containers
  - ms-azuretools.vscode-docker
  - ms-dotnettools.csdevkit
  - ms-dotnettools.csharp
  - ms-dotnettools.vscode-dotnet-runtime
  - ms-kubernetes-tools.vscode-kubernetes-tools
  - ms-mssql.data-workspace-vscode
  - ms-mssql.mssql
  - ms-mssql.sql-bindings-vscode
  - ms-mssql.sql-database-projects-vscode
  - ms-python.debugpy
  - ms-python.isort
  - ms-python.python
  - ms-python.vscode-pylance
  - ms-toolsai.jupyter
  - ms-toolsai.jupyter-keymap
  - ms-toolsai.jupyter-renderers
  - ms-toolsai.vscode-jupyter-cell-tags
  - ms-toolsai.vscode-jupyter-slideshow
  - ms-vscode-remote.remote-containers
  - ms-vscode-remote.remote-ssh
  - ms-vscode-remote.remote-ssh-edit
  - ms-vscode-remote.remote-wsl
  - ms-vscode-remote.vscode-remote-extensionpack
  - ms-vscode.cmake-tools
  - ms-vscode.cpptools
  - ms-vscode.cpptools-extension-pack
  - ms-vscode.cpptools-themes
  - ms-vscode.hexeditor
  - ms-vscode.makefile-tools
  - ms-vscode.powershell
  - ms-vscode.remote-explorer
  - ms-vscode.remote-server
  - ms-vscode.test-adapter-converter
  - ms-vsliveshare.vsliveshare
  - msazurermtools.azurerm-vscode-tools
  - octref.vetur
  - oderwat.indent-rainbow
  - parallelsdesktop.parallels-desktop
  - pspester.pester-test
  - rangav.vscode-thunder-client
  - redhat.java
  - redhat.vscode-commons
  - redhat.vscode-yaml
  - samirat.csharp-test-adapter
  - sibiraj-s.vscode-scss-formatter
  - streetsidesoftware.code-spell-checker
  - takumii.markdowntable
  - teamsdevapp.ms-teams-vscode-extension
  - teamsdevapp.vscode-adaptive-cards
  - twxs.cmake
  - tylerleonhardt.vscode-inline-values-powershell
  - tyriar.sort-lines
  - usernamehw.errorlens
  - visualstudioexptteam.intellicode-api-usage-examples
  - visualstudioexptteam.vscodeintellicode
  - vscjava.vscode-gradle
  - vscjava.vscode-java-debug
  - vscjava.vscode-java-dependency
  - vscjava.vscode-java-pack
  - vscjava.vscode-java-test
  - vscjava.vscode-maven
  - vscode-icons-team.vscode-icons
  - vsls-contrib.codetour
  - vue.volar
  - waderyan.gitblame
  - yzhang.markdown-all-in-one
  - ziyasal.vscode-open-in-github
  # Add more VS Code extensions as needed

# Git configuration
git_user_email: ryan.spletzer@autodesk.com  # Set your email here or pass as a variable
git_user_name: "{{ lookup('pipe', 'id -F') }}"  # Defaults to macOS user's full name

# Additional Git configurations (optional)
# These will be set as git config --global key value
git_additional_configs:
  # Examples (uncomment to use):
  commit.gpgsign: true
  init.defaultBranch: main
  gpg.program: /opt/homebrew/bin/gpg
  push.default: current
  push.autoSetupRemote: true
  user.signingKey: 787AEF0BAE232359
  # core.editor: "code --wait"
  # pull.rebase: "true"
  # init.defaultBranch: "main"
  # color.ui: "auto"
  # alias.co: "checkout"
  # alias.br: "branch"
  # alias.ci: "commit"
  # alias.st: "status"
  # Add more git config options as needed

# Custom commands and scripts (optional)
# These will be executed at the end of the setup process
custom_commands:
  # Show hidden files in Finder
  - echo "Showing hidden files in Finder..."
  - defaults write com.apple.finder AppleShowAllFiles -bool true
  # Show path bar in Finder
  - echo "Showing path bar in Finder..."
  - defaults write com.apple.finder ShowPathbar -bool true
  # Show status bar in Finder
  - echo "Showing status bar in Finder..."
  - defaults write com.apple.finder ShowStatusBar -bool true
  # Disable the warning when changing file extensions
  - echo "Disabling warning when changing file extensions..."
  - defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false
  # Avoid creating .DS_Store files on network or USB volumes
  - echo "Disabling .DS_Store file creation on network and USB volumes..."
  - defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true
  - defaults write com.apple.desktopservices DSDontWriteUSBStores -bool true
  # Use list view in all Finder windows by default
  - echo "Setting Finder default view to list view..."
  - defaults write com.apple.finder FXPreferredViewStyle -string "Nlsv"
  # Enable Safari developer menu
  - echo "Enabling Safari developer menu..."
  - defaults write com.apple.Safari IncludeDevelopMenu -bool true
  - defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
  - defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true
  # Restart affected applications
  - echo "Restarting affected applications..."
  - killall Finder
  - killall Dock
  - killall Safari 2>/dev/null || true
  # Change default shell to PowerShell
  - chsh -s /usr/local/bin/pwsh
  # Example: Dark mode
  # - defaults write -g AppleInterfaceStyle Dark
  # Example: Key repeat settings
  # - defaults write -g InitialKeyRepeat -int 15
  # - defaults write -g KeyRepeat -int 2
  # Add more commands as needed

# Custom script path (optional)
# Provide the path to a custom script that will be executed at the end of the setup
# custom_script: "/path/to/your/custom_script.sh"
# custom_script_args: "--option1 value1 --option2 value2"
